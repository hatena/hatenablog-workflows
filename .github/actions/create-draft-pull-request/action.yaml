name: create draft pull request

inputs:
  title:
    required: true
  draft:
    required: true
  BLOG_DOMAIN:
    required: true
  ENTRY_PATH:
    required: true

runs:
  using: "composite"
  steps:
    - name: set entry variables
      id: set-entry-variables
      run: |
        echo "EDIT_URL=$(yq --front-matter=extract '.EditURL' ${{ inputs.ENTRY_PATH }})" >> $GITHUB_OUTPUT
        echo "ENTRY_ID=$(yq --front-matter=extract '.EditURL' ${{ inputs.ENTRY_PATH }} | grep -oP '[^/]+\d$')" >> $GITHUB_OUTPUT
        echo "PREVIEW_URL=$(yq --front-matter=extract '.PreviewURL' ${{ inputs.ENTRY_PATH }})" >> $GITHUB_OUTPUT
      shell: bash
    - name: set owner
      id: set-owner
      run: |
        owner=$(yq ".[\"${{ inputs.BLOG_DOMAIN }}\"].owner" blogsync.yaml)
        if [[ "$owner" == 'null' ]]; then
          owner=$(yq ".[\"${{ inputs.BLOG_DOMAIN }}\"].username" blogsync.yaml)
        fi
        echo "OWNER_NAME=$owner" >> $GITHUB_OUTPUT
      shell: bash
    - name: delete other files
      run: |
        set +eo pipefail
        delete_files=($(git ls-files -o --exclude-standard | xargs -r grep -xL "EditURL: ${{ steps.set-entry-variables.outputs.EDIT_URL }}"))
        for file in ${delete_files[@]}; do
          rm "$file"
        done

        restore_files=($(git ls-files -m --exclude-standard | xargs -r grep -xL "EditURL: ${{ steps.set-entry-variables.outputs.EDIT_URL }}"))
        for file in ${restore_files[@]}; do
          git restore "$file"
        done
      shell: bash
    - name: move draft and update metadata
      uses: hatena/hatenablog-workflows/.github/actions/move-draft-and-update-metadata@fa544a63e845030ff65e35d78847e2bc2cab981e # v2
    - name: get pull request template
      id: get-pull-request-template
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        pr_template=$(gh repo view --json pullRequestTemplates | jq -r '.pullRequestTemplates | [map(select(.filename == "draft.md"))[0], map(select(.filename == "PULL_REQUEST_TEMPLATE.md"))[0]] | map(select(. != null)) | first | .body // empty')
        if [[ -z "$pr_template" ]]; then
          pr_template=$(cat<<'EOF'
        ## ${TITLE}

        - 編集ページのURL: ${EDIT_URL}
        - プレビューへのURL: ${PREVIEW_URL}
        
        EOF
          )
        fi
        echo "PULL_REQUEST_TEMPLATE<<EOF" >> $GITHUB_OUTPUT
        echo "$pr_template" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
    - name: prepare pull request body
      id: prepare-pull-request-body
      env:
        TITLE: ${{ inputs.title }}
        EDIT_URL: ${{ steps.set-entry-variables.outputs.EDIT_URL }}
        OWNER_NAME: ${{ steps.set-owner.outputs.OWNER_NAME }}
        ENTRY_ID: ${{ steps.set-entry-variables.outputs.ENTRY_ID }}
        PREVIEW_URL: ${{ steps.set-entry-variables.outputs.PREVIEW_URL == 'null' && 'なし' || steps.set-entry-variables.outputs.PREVIEW_URL }}
        PR_TEMPLATE: ${{ steps.get-pull-request-template.outputs.PULL_REQUEST_TEMPLATE }}
      run: |
        echo "PULL_REQUEST_BODY<<EOF" >> $GITHUB_OUTPUT
        echo "${PR_TEMPLATE}" | envsubst '${TITLE} ${EDIT_URL} ${PREVIEW_URL} ${OWNER_NAME} ${ENTRY_ID}' >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
    - name: create draft pull request
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7
      with:
        title: ${{ inputs.title }}
        branch: draft-entry-${{ env.ENTRY_ID }}
        body: ${{ steps.prepare-pull-request-body.outputs.PULL_REQUEST_BODY }}
        delete-branch: true
        draft: ${{ inputs.draft == 'true' }}
